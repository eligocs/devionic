{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","navCtrl","modalController","storage","provider","username","password","isUsernameValid","isPasswordValid","get","then","val","console","log","presentLoading","UserLogin","subscribe","data","LoginReponse","SetHeader","token","user_id","presentToastWithOptions","navigateRoot","err","validate","offline_user","set","length","selector","template"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<link rel=\\\"stylesheet\\\" href=\\\"../../../assets/css/bootstrap.min.css\\\">\\n<link href=\\\"https://fonts.googleapis.com/css2?family=Montserrat&family=Open+Sans&display=swap\\\" rel=\\\"stylesheet\\\">\\n <link href=\\\"https://fonts.googleapis.com/css2?family=Open+Sans&family=Roboto&display=swap\\\" rel=\\\"stylesheet\\\">\\n<ion-content class=\\\" ion-justify-content-center ion-align-items-center\\\"   >\\n  <div class=\\\"main_container\\\">\\n    <ion-grid class=\\\"header-sub\\\">\\n      <ion-row>\\n        <ion-col>\\n           <div class=\\\"logo-area\\\">\\n            <div class=\\\"logo_img ion-margin ion-text-center\\\">\\n              <img width=\\\"100\\\" src=\\\"../../assets/imgs/logo.png\\\" alt=\\\"\\\">\\n            </div>\\n                <div class=\\\"header-text\\\">\\n             <h1>Welcome to <br> Dev Rising Nidhi Ltd.</h1>\\n            </div>\\n              </div>\\n        </ion-col>\\n      </ion-row>\\n      </ion-grid>\\n\\n\\n\\n      <ion-card class=\\\"login_card\\\">\\n        <ion-card-header>\\n          <ion-card-title class=\\\"ion-text-center login_title\\\">Login</ion-card-title>\\n        </ion-card-header>\\n        <form #form=\\\"ngForm\\\" >\\n        <ion-item>\\n          <ion-input [(ngModel)]=\\\"username\\\" name=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ngModel required></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-input  [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"text\\\" placeholder=\\\"Password\\\" ngModel required></ion-input>\\n        </ion-item>\\n        <div class=\\\"btn_cover ion-text-center\\\">\\n         <button (click) = \\\"doLogin()\\\" class=\\\"ion-margin ion-align-center btn login_btn\\\" >Login</button>\\n         \\n        </div>\\n      </form>\\n       </ion-card>\\n  \\n       <ion-grid>\\n        <ion-row class=\\\"bottom_part\\\">\\n          <ion-col class=\\\"bottom_left\\\">\\n          <div class=\\\"form-group remember\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-control\\\"><span>Remember Me</span>\\n          </div>\\n          </ion-col>\\n          <ion-col class=\\\"bottom_right\\\">\\n            <div class=\\\" forgot\\\">\\n                <p class=\\\"forget-password\\\"><a href=\\\"\\\">Forgot Password</a></p>\\n            </div>\\n            </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n  </div>\\n\\n</ion-content>\\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".login_btn {\\n  color: white;\\n  border-radius: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vRDpcXGRldnJpc2luZy9zcmNcXGFwcFxccGFnZXNcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxtQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luX2J0bntcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDgwcHg7XHJcbn0iLCIubG9naW5fYnRuIHtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiA4MHB4O1xufSJdfQ== */\";","import { Component } from '@angular/core';\nimport {ModalController, NavController } from '@ionic/angular';\nimport { ApihelperProvider } from 'src/providers/apihelper/apihelper';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.page.html',\n  styleUrls: ['login.page.scss'],\n})\nexport class LoginPage {\n\n  \n  public username : string = \"\";\n  public password : string = \"\";\n  public isUsernameValid: boolean;\n  public isPasswordValid: boolean;\n  private LoginReponse : any;\n  \n  constructor(\n    // private androidPermissions: AndroidPermissions,\n    public navCtrl: NavController,\n    private modalController: ModalController,\n    private storage: Storage,\n    private provider : ApihelperProvider) {\n    this.isUsernameValid= true;\n    this.isPasswordValid = true; \n    \n    \n\n  }\n  ngOnInit() {\n    // Permission Code\n    // this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.CAMERA).then(\n    //   result => console.log('Has permission?',result.hasPermission),\n    //   err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.CAMERA)\n    // );\n    \n    // this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.CAMERA, this.androidPermissions.PERMISSION.GET_ACCOUNTS]);\n\n    // End of Permission Code\n\n      this.storage.get('offline-user').then((val) => {\n        console.log('USer Details are', val);\n      if(val){\n       this.provider.presentLoading();\n       this.provider.UserLogin( val.username, val.password).subscribe(data=>{\n        this.LoginReponse = data;\n        // console.log(this.LoginReponse);\n        // set header values\n        this.provider.SetHeader(this.LoginReponse.token,this.LoginReponse.user_id);\n        this.provider.presentToastWithOptions('You have already signed in!');\n        this.navCtrl.navigateRoot('/dashboard/home');\n      }\n      ,(err)=> {\n        this.provider.presentToastWithOptions('Your Password might be changed!')});\n      }else\n      {\n        this.navCtrl.navigateRoot('/login');\n      }\n      });\n    \n  }\n  doLogin(){\n    \n    if(this.validate()){\n      \n      //this.navCtrl.setRoot('PrinterPage');\n      // show processing\n       this.provider.presentLoading();\n       this.provider.UserLogin(this.username,this.password).subscribe(data=>{\n        this.LoginReponse = data;\n        // set header values\n        this.provider.SetHeader(this.LoginReponse.token,this.LoginReponse.user_id);\n        // call next APi\n        let offline_user = { \"username\":this.username, \"password\": this.password };\n        // console.log(offline_user);\n        // set a key/value\n        this.storage.set('offline-user', offline_user);\n  \n        // to get a key/value pair\n        this.storage.get('offline-user').then((val) => {\n          console.log('User Details', val);\n        });\n        this.navCtrl.navigateRoot('/dashboard/home');\n      }\n      ,(err)=> {\n        this.provider.presentToastWithOptions('Incorrect details, Please try again!')});\n    }\n  }\n  validate():boolean {\n    \n      this.isUsernameValid = true;\n      this.isPasswordValid = true;\n      if (!this.username ||this.username.length == 0) {\n          this.isUsernameValid = false;\n          this.provider.presentToastWithOptions(\"Username is blank\");\n      }\n      if (!this.password || this.password.length == 0) {\n          this.isPasswordValid = false;\n          this.provider.presentToastWithOptions(\"Password is blank\");\n      }\n      return this.isPasswordValid && this.isUsernameValid ;\n  }\n\n  public showFingerprintAuthDlg(){\n    \n}\n\n}\n"]}