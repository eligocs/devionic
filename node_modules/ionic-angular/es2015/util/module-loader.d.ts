import { ComponentFactoryResolver, InjectionToken, Injector, NgModuleFactory, NgZone, Type } from '@angular/core';
import { Config } from '../config/config';
import { DeepLinkConfig } from '../navigation/nav-util';
import { NgModuleLoader } from './ng-module-loader';
import * as ɵngcc0 from '@angular/core';
export declare const LAZY_LOADED_TOKEN: InjectionToken<any>;
/**
 * @hidden
 */
export declare class ModuleLoader {
    private _ngModuleLoader;
    private _injector;
    /** @internal */
    _cfrMap: Map<any, ComponentFactoryResolver>;
    _promiseMap: Map<string, Promise<NgModuleFactory<any>>>;
    constructor(_ngModuleLoader: NgModuleLoader, _injector: Injector);
    load(modulePath: string): Promise<LoadedModule>;
    getComponentFactoryResolver(component: Type<any>): ComponentFactoryResolver;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ModuleLoader, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ModuleLoader>;
}
/**
 * @hidden
 */
export declare function provideModuleLoader(ngModuleLoader: NgModuleLoader, injector: Injector): ModuleLoader;
export interface LoadedModule {
    componentFactoryResolver: ComponentFactoryResolver;
    component: Type<any>;
}
/**
 * @hidden
 */
export declare function setupPreloadingImplementation(config: Config, deepLinkConfig: DeepLinkConfig, moduleLoader: ModuleLoader): Promise<any>;
/**
 * @hidden
 */
export declare function setupPreloading(config: Config, deepLinkConfig: DeepLinkConfig, moduleLoader: ModuleLoader, ngZone: NgZone): () => void;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLWxvYWRlci5kLnRzIiwic291cmNlcyI6WyJtb2R1bGUtbG9hZGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEluamVjdGlvblRva2VuLCBJbmplY3RvciwgTmdNb2R1bGVGYWN0b3J5LCBOZ1pvbmUsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy9jb25maWcnO1xuaW1wb3J0IHsgRGVlcExpbmtDb25maWcgfSBmcm9tICcuLi9uYXZpZ2F0aW9uL25hdi11dGlsJztcbmltcG9ydCB7IE5nTW9kdWxlTG9hZGVyIH0gZnJvbSAnLi9uZy1tb2R1bGUtbG9hZGVyJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IExBWllfTE9BREVEX1RPS0VOOiBJbmplY3Rpb25Ub2tlbjxhbnk+O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1vZHVsZUxvYWRlciB7XG4gICAgcHJpdmF0ZSBfbmdNb2R1bGVMb2FkZXI7XG4gICAgcHJpdmF0ZSBfaW5qZWN0b3I7XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9jZnJNYXA6IE1hcDxhbnksIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcj47XG4gICAgX3Byb21pc2VNYXA6IE1hcDxzdHJpbmcsIFByb21pc2U8TmdNb2R1bGVGYWN0b3J5PGFueT4+PjtcbiAgICBjb25zdHJ1Y3RvcihfbmdNb2R1bGVMb2FkZXI6IE5nTW9kdWxlTG9hZGVyLCBfaW5qZWN0b3I6IEluamVjdG9yKTtcbiAgICBsb2FkKG1vZHVsZVBhdGg6IHN0cmluZyk6IFByb21pc2U8TG9hZGVkTW9kdWxlPjtcbiAgICBnZXRDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIoY29tcG9uZW50OiBUeXBlPGFueT4pOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI7XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gcHJvdmlkZU1vZHVsZUxvYWRlcihuZ01vZHVsZUxvYWRlcjogTmdNb2R1bGVMb2FkZXIsIGluamVjdG9yOiBJbmplY3Rvcik6IE1vZHVsZUxvYWRlcjtcbmV4cG9ydCBpbnRlcmZhY2UgTG9hZGVkTW9kdWxlIHtcbiAgICBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjtcbiAgICBjb21wb25lbnQ6IFR5cGU8YW55Pjtcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBzZXR1cFByZWxvYWRpbmdJbXBsZW1lbnRhdGlvbihjb25maWc6IENvbmZpZywgZGVlcExpbmtDb25maWc6IERlZXBMaW5rQ29uZmlnLCBtb2R1bGVMb2FkZXI6IE1vZHVsZUxvYWRlcik6IFByb21pc2U8YW55Pjtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBzZXR1cFByZWxvYWRpbmcoY29uZmlnOiBDb25maWcsIGRlZXBMaW5rQ29uZmlnOiBEZWVwTGlua0NvbmZpZywgbW9kdWxlTG9hZGVyOiBNb2R1bGVMb2FkZXIsIG5nWm9uZTogTmdab25lKTogKCkgPT4gdm9pZDtcbiJdfQ==