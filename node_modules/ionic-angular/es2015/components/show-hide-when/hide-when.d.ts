import { NgZone } from '@angular/core';
import { Platform } from '../../platform/platform';
import { DisplayWhen } from './display-when';
/**
 * @name HideWhen
 * @description
 * The `hideWhen` attribute takes a string that represents a plaform or screen orientation.
 * The element the attribute is added to will only be hidden when that platform or screen orientation is active.
 *
 * Complements the [showWhen attribute](../ShowWhen). If the `hideWhen` attribute is used on an
 * element that also has the `showWhen` attribute, the element will not show if `hideWhen` evaluates
 * to `true` or `showWhen` evaluates to `false`. If the `hidden` attribute is also added, the element
 * will not show if `hidden` evaluates to `true`.
 *
 * View the [Platform API docs](../../../platform/Platform) for more information on the different
 * platforms you can use.
 *
 * @usage
 * ```html
 * <div hideWhen="android">
 *  I am hidden on Android!
 * </div>
 *
 * <div hideWhen="ios">
 *  I am hidden on iOS!
 * </div>
 *
 * <div hideWhen="android,ios">
 *  I am hidden on Android and iOS!
 * </div>
 *
 * <div hideWhen="portrait">
 *  I am hidden on Portrait!
 * </div>
 *
 * <div hideWhen="landscape">
 *  I am hidden on Landscape!
 * </div>
 * ```
 *
 * @demo /docs/demos/src/hide-when/
 * @see {@link ../ShowWhen ShowWhen API Docs}
 * @see {@link ../../../platform/Platform Platform API Docs}
*/
import * as ɵngcc0 from '@angular/core';
export declare class HideWhen extends DisplayWhen {
    constructor(hideWhen: string, plt: Platform, zone: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HideWhen, [{ attribute: "hideWhen"; }, null, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<HideWhen, "[hideWhen]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS13aGVuLmQudHMiLCJzb3VyY2VzIjpbImhpZGUtd2hlbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAnLi4vLi4vcGxhdGZvcm0vcGxhdGZvcm0nO1xuaW1wb3J0IHsgRGlzcGxheVdoZW4gfSBmcm9tICcuL2Rpc3BsYXktd2hlbic7XG4vKipcbiAqIEBuYW1lIEhpZGVXaGVuXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBgaGlkZVdoZW5gIGF0dHJpYnV0ZSB0YWtlcyBhIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgYSBwbGFmb3JtIG9yIHNjcmVlbiBvcmllbnRhdGlvbi5cbiAqIFRoZSBlbGVtZW50IHRoZSBhdHRyaWJ1dGUgaXMgYWRkZWQgdG8gd2lsbCBvbmx5IGJlIGhpZGRlbiB3aGVuIHRoYXQgcGxhdGZvcm0gb3Igc2NyZWVuIG9yaWVudGF0aW9uIGlzIGFjdGl2ZS5cbiAqXG4gKiBDb21wbGVtZW50cyB0aGUgW3Nob3dXaGVuIGF0dHJpYnV0ZV0oLi4vU2hvd1doZW4pLiBJZiB0aGUgYGhpZGVXaGVuYCBhdHRyaWJ1dGUgaXMgdXNlZCBvbiBhblxuICogZWxlbWVudCB0aGF0IGFsc28gaGFzIHRoZSBgc2hvd1doZW5gIGF0dHJpYnV0ZSwgdGhlIGVsZW1lbnQgd2lsbCBub3Qgc2hvdyBpZiBgaGlkZVdoZW5gIGV2YWx1YXRlc1xuICogdG8gYHRydWVgIG9yIGBzaG93V2hlbmAgZXZhbHVhdGVzIHRvIGBmYWxzZWAuIElmIHRoZSBgaGlkZGVuYCBhdHRyaWJ1dGUgaXMgYWxzbyBhZGRlZCwgdGhlIGVsZW1lbnRcbiAqIHdpbGwgbm90IHNob3cgaWYgYGhpZGRlbmAgZXZhbHVhdGVzIHRvIGB0cnVlYC5cbiAqXG4gKiBWaWV3IHRoZSBbUGxhdGZvcm0gQVBJIGRvY3NdKC4uLy4uLy4uL3BsYXRmb3JtL1BsYXRmb3JtKSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB0aGUgZGlmZmVyZW50XG4gKiBwbGF0Zm9ybXMgeW91IGNhbiB1c2UuXG4gKlxuICogQHVzYWdlXG4gKiBgYGBodG1sXG4gKiA8ZGl2IGhpZGVXaGVuPVwiYW5kcm9pZFwiPlxuICogIEkgYW0gaGlkZGVuIG9uIEFuZHJvaWQhXG4gKiA8L2Rpdj5cbiAqXG4gKiA8ZGl2IGhpZGVXaGVuPVwiaW9zXCI+XG4gKiAgSSBhbSBoaWRkZW4gb24gaU9TIVxuICogPC9kaXY+XG4gKlxuICogPGRpdiBoaWRlV2hlbj1cImFuZHJvaWQsaW9zXCI+XG4gKiAgSSBhbSBoaWRkZW4gb24gQW5kcm9pZCBhbmQgaU9TIVxuICogPC9kaXY+XG4gKlxuICogPGRpdiBoaWRlV2hlbj1cInBvcnRyYWl0XCI+XG4gKiAgSSBhbSBoaWRkZW4gb24gUG9ydHJhaXQhXG4gKiA8L2Rpdj5cbiAqXG4gKiA8ZGl2IGhpZGVXaGVuPVwibGFuZHNjYXBlXCI+XG4gKiAgSSBhbSBoaWRkZW4gb24gTGFuZHNjYXBlIVxuICogPC9kaXY+XG4gKiBgYGBcbiAqXG4gKiBAZGVtbyAvZG9jcy9kZW1vcy9zcmMvaGlkZS13aGVuL1xuICogQHNlZSB7QGxpbmsgLi4vU2hvd1doZW4gU2hvd1doZW4gQVBJIERvY3N9XG4gKiBAc2VlIHtAbGluayAuLi8uLi8uLi9wbGF0Zm9ybS9QbGF0Zm9ybSBQbGF0Zm9ybSBBUEkgRG9jc31cbiovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBIaWRlV2hlbiBleHRlbmRzIERpc3BsYXlXaGVuIHtcbiAgICBjb25zdHJ1Y3RvcihoaWRlV2hlbjogc3RyaW5nLCBwbHQ6IFBsYXRmb3JtLCB6b25lOiBOZ1pvbmUpO1xufVxuIl19