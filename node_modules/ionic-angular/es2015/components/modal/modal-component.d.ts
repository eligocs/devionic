import { ComponentFactoryResolver, ElementRef, Renderer, ViewContainerRef } from '@angular/core';
import { NavParams } from '../../navigation/nav-params';
import { ViewController } from '../../navigation/view-controller';
import { BlockerDelegate, GestureController } from '../../gestures/gesture-controller';
import { ModuleLoader } from '../../util/module-loader';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class ModalCmp {
    _cfr: ComponentFactoryResolver;
    _renderer: Renderer;
    _elementRef: ElementRef;
    _navParams: NavParams;
    _viewCtrl: ViewController;
    moduleLoader: ModuleLoader;
    _viewport: ViewContainerRef;
    _bdDismiss: boolean;
    _enabled: boolean;
    _gestureBlocker: BlockerDelegate;
    constructor(_cfr: ComponentFactoryResolver, _renderer: Renderer, _elementRef: ElementRef, _navParams: NavParams, _viewCtrl: ViewController, gestureCtrl: GestureController, moduleLoader: ModuleLoader);
    ionViewPreLoad(): void;
    _viewWillEnter(): void;
    _viewDidLeave(): void;
    _setCssClass(componentRef: any, className: string): void;
    _bdClick(): Promise<any>;
    _keyUp(ev: KeyboardEvent): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ModalCmp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ModalCmp, "ion-modal", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm1vZGFsLWNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBFbGVtZW50UmVmLCBSZW5kZXJlciwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmF2UGFyYW1zIH0gZnJvbSAnLi4vLi4vbmF2aWdhdGlvbi9uYXYtcGFyYW1zJztcbmltcG9ydCB7IFZpZXdDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vbmF2aWdhdGlvbi92aWV3LWNvbnRyb2xsZXInO1xuaW1wb3J0IHsgQmxvY2tlckRlbGVnYXRlLCBHZXN0dXJlQ29udHJvbGxlciB9IGZyb20gJy4uLy4uL2dlc3R1cmVzL2dlc3R1cmUtY29udHJvbGxlcic7XG5pbXBvcnQgeyBNb2R1bGVMb2FkZXIgfSBmcm9tICcuLi8uLi91dGlsL21vZHVsZS1sb2FkZXInO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1vZGFsQ21wIHtcbiAgICBfY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI7XG4gICAgX3JlbmRlcmVyOiBSZW5kZXJlcjtcbiAgICBfZWxlbWVudFJlZjogRWxlbWVudFJlZjtcbiAgICBfbmF2UGFyYW1zOiBOYXZQYXJhbXM7XG4gICAgX3ZpZXdDdHJsOiBWaWV3Q29udHJvbGxlcjtcbiAgICBtb2R1bGVMb2FkZXI6IE1vZHVsZUxvYWRlcjtcbiAgICBfdmlld3BvcnQ6IFZpZXdDb250YWluZXJSZWY7XG4gICAgX2JkRGlzbWlzczogYm9vbGVhbjtcbiAgICBfZW5hYmxlZDogYm9vbGVhbjtcbiAgICBfZ2VzdHVyZUJsb2NrZXI6IEJsb2NrZXJEZWxlZ2F0ZTtcbiAgICBjb25zdHJ1Y3RvcihfY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIF9yZW5kZXJlcjogUmVuZGVyZXIsIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmLCBfbmF2UGFyYW1zOiBOYXZQYXJhbXMsIF92aWV3Q3RybDogVmlld0NvbnRyb2xsZXIsIGdlc3R1cmVDdHJsOiBHZXN0dXJlQ29udHJvbGxlciwgbW9kdWxlTG9hZGVyOiBNb2R1bGVMb2FkZXIpO1xuICAgIGlvblZpZXdQcmVMb2FkKCk6IHZvaWQ7XG4gICAgX3ZpZXdXaWxsRW50ZXIoKTogdm9pZDtcbiAgICBfdmlld0RpZExlYXZlKCk6IHZvaWQ7XG4gICAgX3NldENzc0NsYXNzKGNvbXBvbmVudFJlZjogYW55LCBjbGFzc05hbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgX2JkQ2xpY2soKTogUHJvbWlzZTxhbnk+O1xuICAgIF9rZXlVcChldjogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==