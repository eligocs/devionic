import { ElementRef, Renderer } from '@angular/core';
import { App } from '../app/app';
import { Config } from '../../config/config';
import { NavController } from '../../navigation/nav-controller';
import { ToolbarBase } from './toolbar-base';
import { ViewController } from '../../navigation/view-controller';
/**
 * @name Navbar
 * @description
 * Navbar acts as the navigational toolbar, which also comes with a back
 * button. A navbar can contain a `ion-title`, any number of buttons,
 * a segment, or a searchbar. Navbars must be placed within an
 * `<ion-header>` in order for them to be placed above the content.
 * It's important to note that navbar's are part of the dynamic navigation
 * stack. If you need a static toolbar, use ion-toolbar.
 *
 * @usage
 * ```html
 * <ion-header>
 *
 *   <ion-navbar>
 *     <button ion-button icon-only menuToggle>
 *       <ion-icon name="menu"></ion-icon>
 *     </button>
 *
 *     <ion-title>
 *       Page Title
 *     </ion-title>
 *
 *     <ion-buttons end>
 *       <button ion-button icon-only (click)="openModal()">
 *         <ion-icon name="options"></ion-icon>
 *       </button>
 *     </ion-buttons>
 *   </ion-navbar>
 *
 * </ion-header>
 * ```
 *
 * @demo /docs/demos/src/navbar/
 * @see {@link ../../toolbar/Toolbar/ Toolbar API Docs}
 */
import * as ɵngcc0 from '@angular/core';
export declare class Navbar extends ToolbarBase {
    _app: App;
    private navCtrl;
    /**
     * @hidden
     */
    _backText: string;
    /**
     * @hidden
     */
    _bbIcon: string;
    /**
     * @hidden
     */
    _hidden: boolean;
    /**
     * @hidden
     */
    _hideBb: boolean;
    /**
     * @hidden
     */
    _sbPadding: boolean;
    /**
     * @input {boolean} If true, the back button will be hidden.
     */
    hideBackButton: boolean;
    constructor(_app: App, viewCtrl: ViewController, navCtrl: NavController, config: Config, elementRef: ElementRef, renderer: Renderer);
    backButtonClick(ev: UIEvent): void;
    /**
     * Set the text of the Back Button in the Nav Bar. Defaults to "Back".
     */
    setBackButtonText(text: string): void;
    /**
     * @hidden
     */
    didEnter(): void;
    /**
     * @hidden
     */
    setHidden(isHidden: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Navbar, [null, { optional: true; }, { optional: true; }, null, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Navbar, "ion-navbar", never, { "hideBackButton": "hideBackButton"; }, {}, never, ["[menuToggle],ion-buttons[left]", "ion-buttons[start]", "ion-buttons[end],ion-buttons[right]", "*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2YmFyLmQudHMiLCJzb3VyY2VzIjpbIm5hdmJhci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIFJlbmRlcmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHAgfSBmcm9tICcuLi9hcHAvYXBwJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb25maWcnO1xuaW1wb3J0IHsgTmF2Q29udHJvbGxlciB9IGZyb20gJy4uLy4uL25hdmlnYXRpb24vbmF2LWNvbnRyb2xsZXInO1xuaW1wb3J0IHsgVG9vbGJhckJhc2UgfSBmcm9tICcuL3Rvb2xiYXItYmFzZSc7XG5pbXBvcnQgeyBWaWV3Q29udHJvbGxlciB9IGZyb20gJy4uLy4uL25hdmlnYXRpb24vdmlldy1jb250cm9sbGVyJztcbi8qKlxuICogQG5hbWUgTmF2YmFyXG4gKiBAZGVzY3JpcHRpb25cbiAqIE5hdmJhciBhY3RzIGFzIHRoZSBuYXZpZ2F0aW9uYWwgdG9vbGJhciwgd2hpY2ggYWxzbyBjb21lcyB3aXRoIGEgYmFja1xuICogYnV0dG9uLiBBIG5hdmJhciBjYW4gY29udGFpbiBhIGBpb24tdGl0bGVgLCBhbnkgbnVtYmVyIG9mIGJ1dHRvbnMsXG4gKiBhIHNlZ21lbnQsIG9yIGEgc2VhcmNoYmFyLiBOYXZiYXJzIG11c3QgYmUgcGxhY2VkIHdpdGhpbiBhblxuICogYDxpb24taGVhZGVyPmAgaW4gb3JkZXIgZm9yIHRoZW0gdG8gYmUgcGxhY2VkIGFib3ZlIHRoZSBjb250ZW50LlxuICogSXQncyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IG5hdmJhcidzIGFyZSBwYXJ0IG9mIHRoZSBkeW5hbWljIG5hdmlnYXRpb25cbiAqIHN0YWNrLiBJZiB5b3UgbmVlZCBhIHN0YXRpYyB0b29sYmFyLCB1c2UgaW9uLXRvb2xiYXIuXG4gKlxuICogQHVzYWdlXG4gKiBgYGBodG1sXG4gKiA8aW9uLWhlYWRlcj5cbiAqXG4gKiAgIDxpb24tbmF2YmFyPlxuICogICAgIDxidXR0b24gaW9uLWJ1dHRvbiBpY29uLW9ubHkgbWVudVRvZ2dsZT5cbiAqICAgICAgIDxpb24taWNvbiBuYW1lPVwibWVudVwiPjwvaW9uLWljb24+XG4gKiAgICAgPC9idXR0b24+XG4gKlxuICogICAgIDxpb24tdGl0bGU+XG4gKiAgICAgICBQYWdlIFRpdGxlXG4gKiAgICAgPC9pb24tdGl0bGU+XG4gKlxuICogICAgIDxpb24tYnV0dG9ucyBlbmQ+XG4gKiAgICAgICA8YnV0dG9uIGlvbi1idXR0b24gaWNvbi1vbmx5IChjbGljayk9XCJvcGVuTW9kYWwoKVwiPlxuICogICAgICAgICA8aW9uLWljb24gbmFtZT1cIm9wdGlvbnNcIj48L2lvbi1pY29uPlxuICogICAgICAgPC9idXR0b24+XG4gKiAgICAgPC9pb24tYnV0dG9ucz5cbiAqICAgPC9pb24tbmF2YmFyPlxuICpcbiAqIDwvaW9uLWhlYWRlcj5cbiAqIGBgYFxuICpcbiAqIEBkZW1vIC9kb2NzL2RlbW9zL3NyYy9uYXZiYXIvXG4gKiBAc2VlIHtAbGluayAuLi8uLi90b29sYmFyL1Rvb2xiYXIvIFRvb2xiYXIgQVBJIERvY3N9XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5hdmJhciBleHRlbmRzIFRvb2xiYXJCYXNlIHtcbiAgICBfYXBwOiBBcHA7XG4gICAgcHJpdmF0ZSBuYXZDdHJsO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBfYmFja1RleHQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgX2JiSWNvbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBfaGlkZGVuOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBfaGlkZUJiOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBfc2JQYWRkaW5nOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBpbnB1dCB7Ym9vbGVhbn0gSWYgdHJ1ZSwgdGhlIGJhY2sgYnV0dG9uIHdpbGwgYmUgaGlkZGVuLlxuICAgICAqL1xuICAgIGhpZGVCYWNrQnV0dG9uOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKF9hcHA6IEFwcCwgdmlld0N0cmw6IFZpZXdDb250cm9sbGVyLCBuYXZDdHJsOiBOYXZDb250cm9sbGVyLCBjb25maWc6IENvbmZpZywgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyKTtcbiAgICBiYWNrQnV0dG9uQ2xpY2soZXY6IFVJRXZlbnQpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFNldCB0aGUgdGV4dCBvZiB0aGUgQmFjayBCdXR0b24gaW4gdGhlIE5hdiBCYXIuIERlZmF1bHRzIHRvIFwiQmFja1wiLlxuICAgICAqL1xuICAgIHNldEJhY2tCdXR0b25UZXh0KHRleHQ6IHN0cmluZyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGRpZEVudGVyKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHNldEhpZGRlbihpc0hpZGRlbjogYm9vbGVhbik6IHZvaWQ7XG59XG4iXX0=