import { ComponentFactoryResolver, ElementRef, Renderer, ViewContainerRef } from '@angular/core';
import { Config } from '../../config/config';
import { NavParams } from '../../navigation/nav-params';
import { ViewController } from '../../navigation/view-controller';
import { BlockerDelegate, GestureController } from '../../gestures/gesture-controller';
import { ModuleLoader } from '../../util/module-loader';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class PopoverCmp {
    _cfr: ComponentFactoryResolver;
    _elementRef: ElementRef;
    _renderer: Renderer;
    _config: Config;
    _navParams: NavParams;
    _viewCtrl: ViewController;
    moduleLoader: ModuleLoader;
    _viewport: ViewContainerRef;
    d: {
        cssClass?: string;
        showBackdrop?: boolean;
        enableBackdropDismiss?: boolean;
    };
    _enabled: boolean;
    _gestureBlocker: BlockerDelegate;
    id: number;
    constructor(_cfr: ComponentFactoryResolver, _elementRef: ElementRef, _renderer: Renderer, _config: Config, _navParams: NavParams, _viewCtrl: ViewController, gestureCtrl: GestureController, moduleLoader: ModuleLoader);
    ionViewPreLoad(): void;
    _load(component: any): void;
    _viewWillEnter(): void;
    _viewDidLeave(): void;
    _setCssClass(componentRef: any, className: string): void;
    _bdClick(): Promise<any>;
    _keyUp(ev: KeyboardEvent): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PopoverCmp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PopoverCmp, "ion-popover", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG9wb3Zlci1jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEVsZW1lbnRSZWYsIFJlbmRlcmVyLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tICcuLi8uLi9jb25maWcvY29uZmlnJztcbmltcG9ydCB7IE5hdlBhcmFtcyB9IGZyb20gJy4uLy4uL25hdmlnYXRpb24vbmF2LXBhcmFtcyc7XG5pbXBvcnQgeyBWaWV3Q29udHJvbGxlciB9IGZyb20gJy4uLy4uL25hdmlnYXRpb24vdmlldy1jb250cm9sbGVyJztcbmltcG9ydCB7IEJsb2NrZXJEZWxlZ2F0ZSwgR2VzdHVyZUNvbnRyb2xsZXIgfSBmcm9tICcuLi8uLi9nZXN0dXJlcy9nZXN0dXJlLWNvbnRyb2xsZXInO1xuaW1wb3J0IHsgTW9kdWxlTG9hZGVyIH0gZnJvbSAnLi4vLi4vdXRpbC9tb2R1bGUtbG9hZGVyJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb3BvdmVyQ21wIHtcbiAgICBfY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI7XG4gICAgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWY7XG4gICAgX3JlbmRlcmVyOiBSZW5kZXJlcjtcbiAgICBfY29uZmlnOiBDb25maWc7XG4gICAgX25hdlBhcmFtczogTmF2UGFyYW1zO1xuICAgIF92aWV3Q3RybDogVmlld0NvbnRyb2xsZXI7XG4gICAgbW9kdWxlTG9hZGVyOiBNb2R1bGVMb2FkZXI7XG4gICAgX3ZpZXdwb3J0OiBWaWV3Q29udGFpbmVyUmVmO1xuICAgIGQ6IHtcbiAgICAgICAgY3NzQ2xhc3M/OiBzdHJpbmc7XG4gICAgICAgIHNob3dCYWNrZHJvcD86IGJvb2xlYW47XG4gICAgICAgIGVuYWJsZUJhY2tkcm9wRGlzbWlzcz86IGJvb2xlYW47XG4gICAgfTtcbiAgICBfZW5hYmxlZDogYm9vbGVhbjtcbiAgICBfZ2VzdHVyZUJsb2NrZXI6IEJsb2NrZXJEZWxlZ2F0ZTtcbiAgICBpZDogbnVtYmVyO1xuICAgIGNvbnN0cnVjdG9yKF9jZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIF9yZW5kZXJlcjogUmVuZGVyZXIsIF9jb25maWc6IENvbmZpZywgX25hdlBhcmFtczogTmF2UGFyYW1zLCBfdmlld0N0cmw6IFZpZXdDb250cm9sbGVyLCBnZXN0dXJlQ3RybDogR2VzdHVyZUNvbnRyb2xsZXIsIG1vZHVsZUxvYWRlcjogTW9kdWxlTG9hZGVyKTtcbiAgICBpb25WaWV3UHJlTG9hZCgpOiB2b2lkO1xuICAgIF9sb2FkKGNvbXBvbmVudDogYW55KTogdm9pZDtcbiAgICBfdmlld1dpbGxFbnRlcigpOiB2b2lkO1xuICAgIF92aWV3RGlkTGVhdmUoKTogdm9pZDtcbiAgICBfc2V0Q3NzQ2xhc3MoY29tcG9uZW50UmVmOiBhbnksIGNsYXNzTmFtZTogc3RyaW5nKTogdm9pZDtcbiAgICBfYmRDbGljaygpOiBQcm9taXNlPGFueT47XG4gICAgX2tleVVwKGV2OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19