import { Button } from '../button/button';
import { MenuController } from '../app/menu-controller';
import { Navbar } from '../toolbar/navbar';
import { ViewController } from '../../navigation/view-controller';
/**
 * @name MenuToggle
 * @description
 * The `menuToggle` directive can be placed on any button to toggle a menu open or closed.
 * If it is added to the [NavBar](../../toolbar/Navbar) of a page, the button will only appear
 * when the page it's in is currently a root page. See the [Menu Navigation Bar Behavior](../Menu#navigation-bar-behavior)
 * docs for more information.
 *
 *
 * @usage
 *
 * A simple `menuToggle` button can be added using the following markup:
 *
 * ```html
 * <button ion-button menuToggle>Toggle Menu</button>
 * ```
 *
 * To toggle a specific menu by its id or side, give the `menuToggle`
 * directive a value.
 *
 * ```html
 * <button ion-button menuToggle="right">Toggle Right Menu</button>
 * ```
 *
 * If placing the `menuToggle` in a navbar or toolbar, it should be
 * placed as a child of the `<ion-navbar>` or `<ion-toolbar>`, and not in
 * the `<ion-buttons>` element:
 *
 * ```html
 * <ion-header>
 *
 *   <ion-navbar>
 *     <ion-buttons start>
 *       <button ion-button>
 *         <ion-icon name="contact"></ion-icon>
 *       </button>
 *     </ion-buttons>
 *     <button ion-button menuToggle>
 *       <ion-icon name="menu"></ion-icon>
 *     </button>
 *     <ion-title>
 *       Title
 *     </ion-title>
 *     <ion-buttons end>
 *       <button ion-button (click)="doClick()">
 *         <ion-icon name="more"></ion-icon>
 *       </button>
 *     </ion-buttons>
 *   </ion-navbar>
 *
 * </ion-header>
 * ```
 *
 * Similar to `<ion-buttons>`, the `menuToggle` can be positioned using
 * `start`, `end`, `left`, or `right`:
 *
 * ```html
 * <ion-toolbar>
 *   <button ion-button menuToggle right>
 *     <ion-icon name="menu"></ion-icon>
 *   </button>
 *   <ion-title>
 *     Title
 *   </ion-title>
 *   <ion-buttons end>
 *     <button ion-button (click)="doClick()">
 *       <ion-icon name="more"></ion-icon>
 *     </button>
 *   </ion-buttons>
 * </ion-toolbar>
 * ```
 *
 * See the [Toolbar API docs](../../toolbar/Toolbar) for more information
 * on the different positions.
 *
 * @demo /docs/demos/src/menu/
 * @see {@link /docs/components#menus Menu Component Docs}
 * @see {@link ../../menu/Menu Menu API Docs}
 */
import * as ɵngcc0 from '@angular/core';
export declare class MenuToggle {
    private _menu;
    private _viewCtrl;
    private _button;
    /**
     * @hidden
     */
    menuToggle: string;
    /**
     * @hidden
     */
    private _isButton;
    /**
     * @hidden
     */
    private _inNavbar;
    constructor(_menu: MenuController, _viewCtrl: ViewController, _button: Button, _navbar: Navbar);
    ngAfterContentInit(): void;
    /**
    * @hidden
    */
    toggle(): void;
    /**
    * @hidden
    */
    readonly isHidden: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MenuToggle, [null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MenuToggle, "[menuToggle]", never, { "menuToggle": "menuToggle"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS10b2dnbGUuZC50cyIsInNvdXJjZXMiOlsibWVudS10b2dnbGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vYnV0dG9uL2J1dHRvbic7XG5pbXBvcnQgeyBNZW51Q29udHJvbGxlciB9IGZyb20gJy4uL2FwcC9tZW51LWNvbnRyb2xsZXInO1xuaW1wb3J0IHsgTmF2YmFyIH0gZnJvbSAnLi4vdG9vbGJhci9uYXZiYXInO1xuaW1wb3J0IHsgVmlld0NvbnRyb2xsZXIgfSBmcm9tICcuLi8uLi9uYXZpZ2F0aW9uL3ZpZXctY29udHJvbGxlcic7XG4vKipcbiAqIEBuYW1lIE1lbnVUb2dnbGVcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIGBtZW51VG9nZ2xlYCBkaXJlY3RpdmUgY2FuIGJlIHBsYWNlZCBvbiBhbnkgYnV0dG9uIHRvIHRvZ2dsZSBhIG1lbnUgb3BlbiBvciBjbG9zZWQuXG4gKiBJZiBpdCBpcyBhZGRlZCB0byB0aGUgW05hdkJhcl0oLi4vLi4vdG9vbGJhci9OYXZiYXIpIG9mIGEgcGFnZSwgdGhlIGJ1dHRvbiB3aWxsIG9ubHkgYXBwZWFyXG4gKiB3aGVuIHRoZSBwYWdlIGl0J3MgaW4gaXMgY3VycmVudGx5IGEgcm9vdCBwYWdlLiBTZWUgdGhlIFtNZW51IE5hdmlnYXRpb24gQmFyIEJlaGF2aW9yXSguLi9NZW51I25hdmlnYXRpb24tYmFyLWJlaGF2aW9yKVxuICogZG9jcyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKlxuICogQHVzYWdlXG4gKlxuICogQSBzaW1wbGUgYG1lbnVUb2dnbGVgIGJ1dHRvbiBjYW4gYmUgYWRkZWQgdXNpbmcgdGhlIGZvbGxvd2luZyBtYXJrdXA6XG4gKlxuICogYGBgaHRtbFxuICogPGJ1dHRvbiBpb24tYnV0dG9uIG1lbnVUb2dnbGU+VG9nZ2xlIE1lbnU8L2J1dHRvbj5cbiAqIGBgYFxuICpcbiAqIFRvIHRvZ2dsZSBhIHNwZWNpZmljIG1lbnUgYnkgaXRzIGlkIG9yIHNpZGUsIGdpdmUgdGhlIGBtZW51VG9nZ2xlYFxuICogZGlyZWN0aXZlIGEgdmFsdWUuXG4gKlxuICogYGBgaHRtbFxuICogPGJ1dHRvbiBpb24tYnV0dG9uIG1lbnVUb2dnbGU9XCJyaWdodFwiPlRvZ2dsZSBSaWdodCBNZW51PC9idXR0b24+XG4gKiBgYGBcbiAqXG4gKiBJZiBwbGFjaW5nIHRoZSBgbWVudVRvZ2dsZWAgaW4gYSBuYXZiYXIgb3IgdG9vbGJhciwgaXQgc2hvdWxkIGJlXG4gKiBwbGFjZWQgYXMgYSBjaGlsZCBvZiB0aGUgYDxpb24tbmF2YmFyPmAgb3IgYDxpb24tdG9vbGJhcj5gLCBhbmQgbm90IGluXG4gKiB0aGUgYDxpb24tYnV0dG9ucz5gIGVsZW1lbnQ6XG4gKlxuICogYGBgaHRtbFxuICogPGlvbi1oZWFkZXI+XG4gKlxuICogICA8aW9uLW5hdmJhcj5cbiAqICAgICA8aW9uLWJ1dHRvbnMgc3RhcnQ+XG4gKiAgICAgICA8YnV0dG9uIGlvbi1idXR0b24+XG4gKiAgICAgICAgIDxpb24taWNvbiBuYW1lPVwiY29udGFjdFwiPjwvaW9uLWljb24+XG4gKiAgICAgICA8L2J1dHRvbj5cbiAqICAgICA8L2lvbi1idXR0b25zPlxuICogICAgIDxidXR0b24gaW9uLWJ1dHRvbiBtZW51VG9nZ2xlPlxuICogICAgICAgPGlvbi1pY29uIG5hbWU9XCJtZW51XCI+PC9pb24taWNvbj5cbiAqICAgICA8L2J1dHRvbj5cbiAqICAgICA8aW9uLXRpdGxlPlxuICogICAgICAgVGl0bGVcbiAqICAgICA8L2lvbi10aXRsZT5cbiAqICAgICA8aW9uLWJ1dHRvbnMgZW5kPlxuICogICAgICAgPGJ1dHRvbiBpb24tYnV0dG9uIChjbGljayk9XCJkb0NsaWNrKClcIj5cbiAqICAgICAgICAgPGlvbi1pY29uIG5hbWU9XCJtb3JlXCI+PC9pb24taWNvbj5cbiAqICAgICAgIDwvYnV0dG9uPlxuICogICAgIDwvaW9uLWJ1dHRvbnM+XG4gKiAgIDwvaW9uLW5hdmJhcj5cbiAqXG4gKiA8L2lvbi1oZWFkZXI+XG4gKiBgYGBcbiAqXG4gKiBTaW1pbGFyIHRvIGA8aW9uLWJ1dHRvbnM+YCwgdGhlIGBtZW51VG9nZ2xlYCBjYW4gYmUgcG9zaXRpb25lZCB1c2luZ1xuICogYHN0YXJ0YCwgYGVuZGAsIGBsZWZ0YCwgb3IgYHJpZ2h0YDpcbiAqXG4gKiBgYGBodG1sXG4gKiA8aW9uLXRvb2xiYXI+XG4gKiAgIDxidXR0b24gaW9uLWJ1dHRvbiBtZW51VG9nZ2xlIHJpZ2h0PlxuICogICAgIDxpb24taWNvbiBuYW1lPVwibWVudVwiPjwvaW9uLWljb24+XG4gKiAgIDwvYnV0dG9uPlxuICogICA8aW9uLXRpdGxlPlxuICogICAgIFRpdGxlXG4gKiAgIDwvaW9uLXRpdGxlPlxuICogICA8aW9uLWJ1dHRvbnMgZW5kPlxuICogICAgIDxidXR0b24gaW9uLWJ1dHRvbiAoY2xpY2spPVwiZG9DbGljaygpXCI+XG4gKiAgICAgICA8aW9uLWljb24gbmFtZT1cIm1vcmVcIj48L2lvbi1pY29uPlxuICogICAgIDwvYnV0dG9uPlxuICogICA8L2lvbi1idXR0b25zPlxuICogPC9pb24tdG9vbGJhcj5cbiAqIGBgYFxuICpcbiAqIFNlZSB0aGUgW1Rvb2xiYXIgQVBJIGRvY3NdKC4uLy4uL3Rvb2xiYXIvVG9vbGJhcikgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiAqIG9uIHRoZSBkaWZmZXJlbnQgcG9zaXRpb25zLlxuICpcbiAqIEBkZW1vIC9kb2NzL2RlbW9zL3NyYy9tZW51L1xuICogQHNlZSB7QGxpbmsgL2RvY3MvY29tcG9uZW50cyNtZW51cyBNZW51IENvbXBvbmVudCBEb2NzfVxuICogQHNlZSB7QGxpbmsgLi4vLi4vbWVudS9NZW51IE1lbnUgQVBJIERvY3N9XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1lbnVUb2dnbGUge1xuICAgIHByaXZhdGUgX21lbnU7XG4gICAgcHJpdmF0ZSBfdmlld0N0cmw7XG4gICAgcHJpdmF0ZSBfYnV0dG9uO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBtZW51VG9nZ2xlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHByaXZhdGUgX2lzQnV0dG9uO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwcml2YXRlIF9pbk5hdmJhcjtcbiAgICBjb25zdHJ1Y3RvcihfbWVudTogTWVudUNvbnRyb2xsZXIsIF92aWV3Q3RybDogVmlld0NvbnRyb2xsZXIsIF9idXR0b246IEJ1dHRvbiwgX25hdmJhcjogTmF2YmFyKTtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICAvKipcbiAgICAqIEBoaWRkZW5cbiAgICAqL1xuICAgIHRvZ2dsZSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICogQGhpZGRlblxuICAgICovXG4gICAgcmVhZG9ubHkgaXNIaWRkZW46IGJvb2xlYW47XG59XG4iXX0=