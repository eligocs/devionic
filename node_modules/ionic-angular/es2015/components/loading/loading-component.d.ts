import { ElementRef, Renderer } from '@angular/core';
import { Config } from '../../config/config';
import { BlockerDelegate, GestureController } from '../../gestures/gesture-controller';
import { LoadingOptions } from './loading-options';
import { NavParams } from '../../navigation/nav-params';
import { ViewController } from '../../navigation/view-controller';
/**
* @hidden
*/
import * as ɵngcc0 from '@angular/core';
export declare class LoadingCmp {
    private _viewCtrl;
    private _config;
    d: LoadingOptions;
    id: number;
    showSpinner: boolean;
    durationTimeout: any;
    gestureBlocker: BlockerDelegate;
    constructor(_viewCtrl: ViewController, _config: Config, _elementRef: ElementRef, gestureCtrl: GestureController, params: NavParams, renderer: Renderer);
    ngOnInit(): void;
    ionViewWillEnter(): void;
    ionViewDidLeave(): void;
    ionViewDidEnter(): void;
    keyUp(ev: KeyboardEvent): void;
    bdClick(): void;
    dismiss(role: string): Promise<any>;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LoadingCmp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<LoadingCmp, "ion-loading", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibG9hZGluZy1jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSAnLi4vLi4vY29uZmlnL2NvbmZpZyc7XG5pbXBvcnQgeyBCbG9ja2VyRGVsZWdhdGUsIEdlc3R1cmVDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vZ2VzdHVyZXMvZ2VzdHVyZS1jb250cm9sbGVyJztcbmltcG9ydCB7IExvYWRpbmdPcHRpb25zIH0gZnJvbSAnLi9sb2FkaW5nLW9wdGlvbnMnO1xuaW1wb3J0IHsgTmF2UGFyYW1zIH0gZnJvbSAnLi4vLi4vbmF2aWdhdGlvbi9uYXYtcGFyYW1zJztcbmltcG9ydCB7IFZpZXdDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vbmF2aWdhdGlvbi92aWV3LWNvbnRyb2xsZXInO1xuLyoqXG4qIEBoaWRkZW5cbiovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMb2FkaW5nQ21wIHtcbiAgICBwcml2YXRlIF92aWV3Q3RybDtcbiAgICBwcml2YXRlIF9jb25maWc7XG4gICAgZDogTG9hZGluZ09wdGlvbnM7XG4gICAgaWQ6IG51bWJlcjtcbiAgICBzaG93U3Bpbm5lcjogYm9vbGVhbjtcbiAgICBkdXJhdGlvblRpbWVvdXQ6IGFueTtcbiAgICBnZXN0dXJlQmxvY2tlcjogQmxvY2tlckRlbGVnYXRlO1xuICAgIGNvbnN0cnVjdG9yKF92aWV3Q3RybDogVmlld0NvbnRyb2xsZXIsIF9jb25maWc6IENvbmZpZywgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIGdlc3R1cmVDdHJsOiBHZXN0dXJlQ29udHJvbGxlciwgcGFyYW1zOiBOYXZQYXJhbXMsIHJlbmRlcmVyOiBSZW5kZXJlcik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBpb25WaWV3V2lsbEVudGVyKCk6IHZvaWQ7XG4gICAgaW9uVmlld0RpZExlYXZlKCk6IHZvaWQ7XG4gICAgaW9uVmlld0RpZEVudGVyKCk6IHZvaWQ7XG4gICAga2V5VXAoZXY6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIGJkQ2xpY2soKTogdm9pZDtcbiAgICBkaXNtaXNzKHJvbGU6IHN0cmluZyk6IFByb21pc2U8YW55PjtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19