import { ElementRef, OnDestroy, Renderer } from '@angular/core';
import { Config } from '../../config/config';
import { Form, IonicTapInput } from '../../util/form';
import { BaseInput } from '../../util/base-input';
import { Item } from '../item/item';
/**
 * @name Checkbox
 * @module ionic
 *
 * @description
 * The Checkbox is a simple component styled based on the mode. It can be
 * placed in an `ion-item` or used as a stand-alone checkbox.
 *
 * See the [Angular Docs](https://angular.io/docs/ts/latest/guide/forms.html)
 * for more info on forms and inputs.
 *
 *
 * @usage
 * ```html
 *
 *  <ion-list>
 *
 *    <ion-item>
 *      <ion-label>Pepperoni</ion-label>
 *      <ion-checkbox [(ngModel)]="pepperoni"></ion-checkbox>
 *    </ion-item>
 *
 *    <ion-item>
 *      <ion-label>Sausage</ion-label>
 *      <ion-checkbox [(ngModel)]="sausage" disabled="true"></ion-checkbox>
 *    </ion-item>
 *
 *    <ion-item>
 *      <ion-label>Mushrooms</ion-label>
 *      <ion-checkbox [(ngModel)]="mushrooms"></ion-checkbox>
 *    </ion-item>
 *
 *  </ion-list>
 * ```
 *
 * @advanced
 *
 * ```html
 *
 * <!-- Call function when state changes -->
 *  <ion-list>
 *
 *    <ion-item>
 *      <ion-label>Cucumber</ion-label>
 *      <ion-checkbox [(ngModel)]="cucumber" (ionChange)="updateCucumber()"></ion-checkbox>
 *    </ion-item>
 *
 *  </ion-list>
 * ```
 *
 * ```ts
 * @Component({
 *   templateUrl: 'main.html'
 * })
 * class SaladPage {
 *   cucumber: boolean;
 *
 *   updateCucumber() {
 *     console.log('Cucumbers new state:' + this.cucumber);
 *   }
 * }
 * ```
 *
 * @demo /docs/demos/src/checkbox/
 * @see {@link /docs/components#checkbox Checkbox Component Docs}
 */
import * as ɵngcc0 from '@angular/core';
export declare class Checkbox extends BaseInput<boolean> implements IonicTapInput, OnDestroy {
    /**
     * @input {boolean} If true, the element is selected.
     */
    checked: boolean;
    constructor(config: Config, form: Form, item: Item, elementRef: ElementRef, renderer: Renderer);
    /**
     * @hidden
     */
    _click(ev: UIEvent): void;
    /**
     * @hidden
     */
    _inputNormalize(val: any): boolean;
    /**
     * @hidden
     */
    _inputUpdated(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Checkbox, [null, null, { optional: true; }, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Checkbox, "ion-checkbox", never, { "checked": "checked"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3guZC50cyIsInNvdXJjZXMiOlsiY2hlY2tib3guZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIFJlbmRlcmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tICcuLi8uLi9jb25maWcvY29uZmlnJztcbmltcG9ydCB7IEZvcm0sIElvbmljVGFwSW5wdXQgfSBmcm9tICcuLi8uLi91dGlsL2Zvcm0nO1xuaW1wb3J0IHsgQmFzZUlucHV0IH0gZnJvbSAnLi4vLi4vdXRpbC9iYXNlLWlucHV0JztcbmltcG9ydCB7IEl0ZW0gfSBmcm9tICcuLi9pdGVtL2l0ZW0nO1xuLyoqXG4gKiBAbmFtZSBDaGVja2JveFxuICogQG1vZHVsZSBpb25pY1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIENoZWNrYm94IGlzIGEgc2ltcGxlIGNvbXBvbmVudCBzdHlsZWQgYmFzZWQgb24gdGhlIG1vZGUuIEl0IGNhbiBiZVxuICogcGxhY2VkIGluIGFuIGBpb24taXRlbWAgb3IgdXNlZCBhcyBhIHN0YW5kLWFsb25lIGNoZWNrYm94LlxuICpcbiAqIFNlZSB0aGUgW0FuZ3VsYXIgRG9jc10oaHR0cHM6Ly9hbmd1bGFyLmlvL2RvY3MvdHMvbGF0ZXN0L2d1aWRlL2Zvcm1zLmh0bWwpXG4gKiBmb3IgbW9yZSBpbmZvIG9uIGZvcm1zIGFuZCBpbnB1dHMuXG4gKlxuICpcbiAqIEB1c2FnZVxuICogYGBgaHRtbFxuICpcbiAqICA8aW9uLWxpc3Q+XG4gKlxuICogICAgPGlvbi1pdGVtPlxuICogICAgICA8aW9uLWxhYmVsPlBlcHBlcm9uaTwvaW9uLWxhYmVsPlxuICogICAgICA8aW9uLWNoZWNrYm94IFsobmdNb2RlbCldPVwicGVwcGVyb25pXCI+PC9pb24tY2hlY2tib3g+XG4gKiAgICA8L2lvbi1pdGVtPlxuICpcbiAqICAgIDxpb24taXRlbT5cbiAqICAgICAgPGlvbi1sYWJlbD5TYXVzYWdlPC9pb24tbGFiZWw+XG4gKiAgICAgIDxpb24tY2hlY2tib3ggWyhuZ01vZGVsKV09XCJzYXVzYWdlXCIgZGlzYWJsZWQ9XCJ0cnVlXCI+PC9pb24tY2hlY2tib3g+XG4gKiAgICA8L2lvbi1pdGVtPlxuICpcbiAqICAgIDxpb24taXRlbT5cbiAqICAgICAgPGlvbi1sYWJlbD5NdXNocm9vbXM8L2lvbi1sYWJlbD5cbiAqICAgICAgPGlvbi1jaGVja2JveCBbKG5nTW9kZWwpXT1cIm11c2hyb29tc1wiPjwvaW9uLWNoZWNrYm94PlxuICogICAgPC9pb24taXRlbT5cbiAqXG4gKiAgPC9pb24tbGlzdD5cbiAqIGBgYFxuICpcbiAqIEBhZHZhbmNlZFxuICpcbiAqIGBgYGh0bWxcbiAqXG4gKiA8IS0tIENhbGwgZnVuY3Rpb24gd2hlbiBzdGF0ZSBjaGFuZ2VzIC0tPlxuICogIDxpb24tbGlzdD5cbiAqXG4gKiAgICA8aW9uLWl0ZW0+XG4gKiAgICAgIDxpb24tbGFiZWw+Q3VjdW1iZXI8L2lvbi1sYWJlbD5cbiAqICAgICAgPGlvbi1jaGVja2JveCBbKG5nTW9kZWwpXT1cImN1Y3VtYmVyXCIgKGlvbkNoYW5nZSk9XCJ1cGRhdGVDdWN1bWJlcigpXCI+PC9pb24tY2hlY2tib3g+XG4gKiAgICA8L2lvbi1pdGVtPlxuICpcbiAqICA8L2lvbi1saXN0PlxuICogYGBgXG4gKlxuICogYGBgdHNcbiAqIEBDb21wb25lbnQoe1xuICogICB0ZW1wbGF0ZVVybDogJ21haW4uaHRtbCdcbiAqIH0pXG4gKiBjbGFzcyBTYWxhZFBhZ2Uge1xuICogICBjdWN1bWJlcjogYm9vbGVhbjtcbiAqXG4gKiAgIHVwZGF0ZUN1Y3VtYmVyKCkge1xuICogICAgIGNvbnNvbGUubG9nKCdDdWN1bWJlcnMgbmV3IHN0YXRlOicgKyB0aGlzLmN1Y3VtYmVyKTtcbiAqICAgfVxuICogfVxuICogYGBgXG4gKlxuICogQGRlbW8gL2RvY3MvZGVtb3Mvc3JjL2NoZWNrYm94L1xuICogQHNlZSB7QGxpbmsgL2RvY3MvY29tcG9uZW50cyNjaGVja2JveCBDaGVja2JveCBDb21wb25lbnQgRG9jc31cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hlY2tib3ggZXh0ZW5kcyBCYXNlSW5wdXQ8Ym9vbGVhbj4gaW1wbGVtZW50cyBJb25pY1RhcElucHV0LCBPbkRlc3Ryb3kge1xuICAgIC8qKlxuICAgICAqIEBpbnB1dCB7Ym9vbGVhbn0gSWYgdHJ1ZSwgdGhlIGVsZW1lbnQgaXMgc2VsZWN0ZWQuXG4gICAgICovXG4gICAgY2hlY2tlZDogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IENvbmZpZywgZm9ybTogRm9ybSwgaXRlbTogSXRlbSwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyKTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgX2NsaWNrKGV2OiBVSUV2ZW50KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgX2lucHV0Tm9ybWFsaXplKHZhbDogYW55KTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgX2lucHV0VXBkYXRlZCgpOiB2b2lkO1xufVxuIl19