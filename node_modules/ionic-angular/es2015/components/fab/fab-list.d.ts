import { ElementRef, QueryList, Renderer } from '@angular/core';
import { Config } from '../../config/config';
import { Platform } from '../../platform/platform';
import { FabButton } from './fab';
/**
  * @name FabList
  * @description
  * `ion-fab-list` is a container for multiple FAB buttons. They are components of `ion-fab` and allow you to specificy the buttons position, left, right, top, bottom.
  * @usage
  *
  * ```html
  *  <ion-fab bottom right >
  *    <button ion-fab>Share</button>
  *    <ion-fab-list side="top">
  *      <button ion-fab>Facebook</button>
  *      <button ion-fab>Twitter</button>
  *      <button ion-fab>Youtube</button>
  *    </ion-fab-list>
  *    <ion-fab-list side="left">
  *      <button ion-fab>Vimeo</button>
  *    </ion-fab-list>
  *  </ion-fab>
  * ```
  * @module ionic
  *
  * @demo /docs/demos/src/fab/
  * @see {@link /docs/components#fab Fab Component Docs}
 */
import * as ɵngcc0 from '@angular/core';
export declare class FabList {
    private _elementRef;
    private _renderer;
    private _plt;
    _visible: boolean;
    _fabs: FabButton[];
    _mode: string;
    constructor(_elementRef: ElementRef, _renderer: Renderer, config: Config, _plt: Platform);
    _setbuttons: QueryList<FabButton>;
    /**
     * @hidden
     */
    setVisible(val: boolean): void;
    /**
     * @internal
     */
    setElementClass(className: string, add: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FabList, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FabList, "ion-fab-list", never, {}, {}, ["_setbuttons"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFiLWxpc3QuZC50cyIsInNvdXJjZXMiOlsiZmFiLWxpc3QuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIFF1ZXJ5TGlzdCwgUmVuZGVyZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb25maWcnO1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICcuLi8uLi9wbGF0Zm9ybS9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBGYWJCdXR0b24gfSBmcm9tICcuL2ZhYic7XG4vKipcbiAgKiBAbmFtZSBGYWJMaXN0XG4gICogQGRlc2NyaXB0aW9uXG4gICogYGlvbi1mYWItbGlzdGAgaXMgYSBjb250YWluZXIgZm9yIG11bHRpcGxlIEZBQiBidXR0b25zLiBUaGV5IGFyZSBjb21wb25lbnRzIG9mIGBpb24tZmFiYCBhbmQgYWxsb3cgeW91IHRvIHNwZWNpZmljeSB0aGUgYnV0dG9ucyBwb3NpdGlvbiwgbGVmdCwgcmlnaHQsIHRvcCwgYm90dG9tLlxuICAqIEB1c2FnZVxuICAqXG4gICogYGBgaHRtbFxuICAqICA8aW9uLWZhYiBib3R0b20gcmlnaHQgPlxuICAqICAgIDxidXR0b24gaW9uLWZhYj5TaGFyZTwvYnV0dG9uPlxuICAqICAgIDxpb24tZmFiLWxpc3Qgc2lkZT1cInRvcFwiPlxuICAqICAgICAgPGJ1dHRvbiBpb24tZmFiPkZhY2Vib29rPC9idXR0b24+XG4gICogICAgICA8YnV0dG9uIGlvbi1mYWI+VHdpdHRlcjwvYnV0dG9uPlxuICAqICAgICAgPGJ1dHRvbiBpb24tZmFiPllvdXR1YmU8L2J1dHRvbj5cbiAgKiAgICA8L2lvbi1mYWItbGlzdD5cbiAgKiAgICA8aW9uLWZhYi1saXN0IHNpZGU9XCJsZWZ0XCI+XG4gICogICAgICA8YnV0dG9uIGlvbi1mYWI+VmltZW88L2J1dHRvbj5cbiAgKiAgICA8L2lvbi1mYWItbGlzdD5cbiAgKiAgPC9pb24tZmFiPlxuICAqIGBgYFxuICAqIEBtb2R1bGUgaW9uaWNcbiAgKlxuICAqIEBkZW1vIC9kb2NzL2RlbW9zL3NyYy9mYWIvXG4gICogQHNlZSB7QGxpbmsgL2RvY3MvY29tcG9uZW50cyNmYWIgRmFiIENvbXBvbmVudCBEb2NzfVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGYWJMaXN0IHtcbiAgICBwcml2YXRlIF9lbGVtZW50UmVmO1xuICAgIHByaXZhdGUgX3JlbmRlcmVyO1xuICAgIHByaXZhdGUgX3BsdDtcbiAgICBfdmlzaWJsZTogYm9vbGVhbjtcbiAgICBfZmFiczogRmFiQnV0dG9uW107XG4gICAgX21vZGU6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihfZWxlbWVudFJlZjogRWxlbWVudFJlZiwgX3JlbmRlcmVyOiBSZW5kZXJlciwgY29uZmlnOiBDb25maWcsIF9wbHQ6IFBsYXRmb3JtKTtcbiAgICBfc2V0YnV0dG9uczogUXVlcnlMaXN0PEZhYkJ1dHRvbj47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHNldFZpc2libGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBzZXRFbGVtZW50Q2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcsIGFkZDogYm9vbGVhbik6IHZvaWQ7XG59XG4iXX0=