import { ComponentFactoryResolver, ElementRef, ErrorHandler, NgZone, Renderer, ViewContainerRef } from '@angular/core';
import { App } from './app';
import { Config } from '../../config/config';
import { DeepLinker } from '../../navigation/deep-linker';
import { DomController } from '../../platform/dom-controller';
import { GestureController } from '../../gestures/gesture-controller';
import { NavControllerBase } from '../../navigation/nav-controller-base';
import { NavigationContainer } from '../../navigation/navigation-container';
import { Platform } from '../../platform/platform';
import { TransitionController } from '../../transitions/transition-controller';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class OverlayPortal extends NavControllerBase implements NavigationContainer {
    constructor(app: App, config: Config, plt: Platform, elementRef: ElementRef, zone: NgZone, renderer: Renderer, cfr: ComponentFactoryResolver, gestureCtrl: GestureController, transCtrl: TransitionController, linker: DeepLinker, viewPort: ViewContainerRef, domCtrl: DomController, errHandler: ErrorHandler);
    _overlayPortal: number;
    ngOnDestroy(): void;
    getType(): string;
    getSecondaryIdentifier(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OverlayPortal, [null, null, null, null, null, null, null, null, null, { optional: true; }, null, null, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<OverlayPortal, "[overlay-portal]", never, { "_overlayPortal": "overlay-portal"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS1wb3J0YWwuZC50cyIsInNvdXJjZXMiOlsib3ZlcmxheS1wb3J0YWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBFbGVtZW50UmVmLCBFcnJvckhhbmRsZXIsIE5nWm9uZSwgUmVuZGVyZXIsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwcCB9IGZyb20gJy4vYXBwJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb25maWcnO1xuaW1wb3J0IHsgRGVlcExpbmtlciB9IGZyb20gJy4uLy4uL25hdmlnYXRpb24vZGVlcC1saW5rZXInO1xuaW1wb3J0IHsgRG9tQ29udHJvbGxlciB9IGZyb20gJy4uLy4uL3BsYXRmb3JtL2RvbS1jb250cm9sbGVyJztcbmltcG9ydCB7IEdlc3R1cmVDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vZ2VzdHVyZXMvZ2VzdHVyZS1jb250cm9sbGVyJztcbmltcG9ydCB7IE5hdkNvbnRyb2xsZXJCYXNlIH0gZnJvbSAnLi4vLi4vbmF2aWdhdGlvbi9uYXYtY29udHJvbGxlci1iYXNlJztcbmltcG9ydCB7IE5hdmlnYXRpb25Db250YWluZXIgfSBmcm9tICcuLi8uLi9uYXZpZ2F0aW9uL25hdmlnYXRpb24tY29udGFpbmVyJztcbmltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAnLi4vLi4vcGxhdGZvcm0vcGxhdGZvcm0nO1xuaW1wb3J0IHsgVHJhbnNpdGlvbkNvbnRyb2xsZXIgfSBmcm9tICcuLi8uLi90cmFuc2l0aW9ucy90cmFuc2l0aW9uLWNvbnRyb2xsZXInO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE92ZXJsYXlQb3J0YWwgZXh0ZW5kcyBOYXZDb250cm9sbGVyQmFzZSBpbXBsZW1lbnRzIE5hdmlnYXRpb25Db250YWluZXIge1xuICAgIGNvbnN0cnVjdG9yKGFwcDogQXBwLCBjb25maWc6IENvbmZpZywgcGx0OiBQbGF0Zm9ybSwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgem9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIsIGNmcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBnZXN0dXJlQ3RybDogR2VzdHVyZUNvbnRyb2xsZXIsIHRyYW5zQ3RybDogVHJhbnNpdGlvbkNvbnRyb2xsZXIsIGxpbmtlcjogRGVlcExpbmtlciwgdmlld1BvcnQ6IFZpZXdDb250YWluZXJSZWYsIGRvbUN0cmw6IERvbUNvbnRyb2xsZXIsIGVyckhhbmRsZXI6IEVycm9ySGFuZGxlcik7XG4gICAgX292ZXJsYXlQb3J0YWw6IG51bWJlcjtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGdldFR5cGUoKTogc3RyaW5nO1xuICAgIGdldFNlY29uZGFyeUlkZW50aWZpZXIoKTogc3RyaW5nO1xufVxuIl19