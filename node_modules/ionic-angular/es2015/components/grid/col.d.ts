/**
  * @name Col
  * @module ionic
  * @description
  *
  * Columns are cellular components of the [grid](../Grid) system and go inside of a [row](../Row).
  * They will expand to fill their row. All content within a grid should go inside of a column.
  *
  * ## Column attributes
  *
  * By default, columns will stretch to fill the entire height of the row.
  * There are several attributes that can be added to a column to customize this behavior.
  *
  * | Property              | Description                                                                                                 |
  * |-----------------------|-------------------------------------------------------------------------------------------------------------|
  * | align-self-start      | Adds `align-self: flex-start`. The column will be vertically aligned at the top.                            |
  * | align-self-center     | Adds `align-self: center`. The column will be vertically aligned in the center.                             |
  * | align-self-end        | Adds `align-self: flex-end`. The column will be vertically aligned at the bottom.                           |
  * | align-self-stretch    | Adds `align-self: stretch`. The column will be stretched to take up the entire height of the row.           |
  * | align-self-baseline   | Adds `align-self: baseline`. The column will be vertically aligned at its baseline.                         |
  *
  *
 */
import * as ɵngcc0 from '@angular/core';
export declare class Col {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Col, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<Col, "ion-col, [ion-col]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sLmQudHMiLCJzb3VyY2VzIjpbImNvbC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gICogQG5hbWUgQ29sXG4gICogQG1vZHVsZSBpb25pY1xuICAqIEBkZXNjcmlwdGlvblxuICAqXG4gICogQ29sdW1ucyBhcmUgY2VsbHVsYXIgY29tcG9uZW50cyBvZiB0aGUgW2dyaWRdKC4uL0dyaWQpIHN5c3RlbSBhbmQgZ28gaW5zaWRlIG9mIGEgW3Jvd10oLi4vUm93KS5cbiAgKiBUaGV5IHdpbGwgZXhwYW5kIHRvIGZpbGwgdGhlaXIgcm93LiBBbGwgY29udGVudCB3aXRoaW4gYSBncmlkIHNob3VsZCBnbyBpbnNpZGUgb2YgYSBjb2x1bW4uXG4gICpcbiAgKiAjIyBDb2x1bW4gYXR0cmlidXRlc1xuICAqXG4gICogQnkgZGVmYXVsdCwgY29sdW1ucyB3aWxsIHN0cmV0Y2ggdG8gZmlsbCB0aGUgZW50aXJlIGhlaWdodCBvZiB0aGUgcm93LlxuICAqIFRoZXJlIGFyZSBzZXZlcmFsIGF0dHJpYnV0ZXMgdGhhdCBjYW4gYmUgYWRkZWQgdG8gYSBjb2x1bW4gdG8gY3VzdG9taXplIHRoaXMgYmVoYXZpb3IuXG4gICpcbiAgKiB8IFByb3BlcnR5ICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAgKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXxcbiAgKiB8IGFsaWduLXNlbGYtc3RhcnQgICAgICB8IEFkZHMgYGFsaWduLXNlbGY6IGZsZXgtc3RhcnRgLiBUaGUgY29sdW1uIHdpbGwgYmUgdmVydGljYWxseSBhbGlnbmVkIGF0IHRoZSB0b3AuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAgKiB8IGFsaWduLXNlbGYtY2VudGVyICAgICB8IEFkZHMgYGFsaWduLXNlbGY6IGNlbnRlcmAuIFRoZSBjb2x1bW4gd2lsbCBiZSB2ZXJ0aWNhbGx5IGFsaWduZWQgaW4gdGhlIGNlbnRlci4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAgKiB8IGFsaWduLXNlbGYtZW5kICAgICAgICB8IEFkZHMgYGFsaWduLXNlbGY6IGZsZXgtZW5kYC4gVGhlIGNvbHVtbiB3aWxsIGJlIHZlcnRpY2FsbHkgYWxpZ25lZCBhdCB0aGUgYm90dG9tLiAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAgKiB8IGFsaWduLXNlbGYtc3RyZXRjaCAgICB8IEFkZHMgYGFsaWduLXNlbGY6IHN0cmV0Y2hgLiBUaGUgY29sdW1uIHdpbGwgYmUgc3RyZXRjaGVkIHRvIHRha2UgdXAgdGhlIGVudGlyZSBoZWlnaHQgb2YgdGhlIHJvdy4gICAgICAgICAgIHxcbiAgKiB8IGFsaWduLXNlbGYtYmFzZWxpbmUgICB8IEFkZHMgYGFsaWduLXNlbGY6IGJhc2VsaW5lYC4gVGhlIGNvbHVtbiB3aWxsIGJlIHZlcnRpY2FsbHkgYWxpZ25lZCBhdCBpdHMgYmFzZWxpbmUuICAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAgKlxuICAqXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbCB7XG59XG4iXX0=