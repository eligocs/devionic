import { App } from '../components/app/app';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
export declare const GESTURE_GO_BACK_SWIPE = "goback-swipe";
/** @hidden */
export declare const GESTURE_MENU_SWIPE = "menu-swipe";
/** @hidden */
export declare const GESTURE_ITEM_SWIPE = "item-swipe";
/** @hidden */
export declare const GESTURE_REFRESHER = "refresher";
/** @hidden */
export declare const GESTURE_TOGGLE = "toggle";
/** @hidden */
export declare const GESTURE_PRIORITY_SLIDING_ITEM = -10;
/** @hidden */
export declare const GESTURE_PRIORITY_REFRESHER = 0;
/** @hidden */
export declare const GESTURE_PRIORITY_MENU_SWIPE = 10;
/** @hidden */
export declare const GESTURE_PRIORITY_GO_BACK_SWIPE = 20;
/** @hidden */
export declare const GESTURE_PRIORITY_TOGGLE = 30;
/**
* @hidden
*/
export interface GestureOptions {
    name: string;
    disableScroll?: boolean;
    priority?: number;
}
/**
* @hidden
*/
export interface BlockerOptions {
    disableScroll?: boolean;
    disable?: string[];
}
/**
* @hidden
*/
export declare const BLOCK_ALL: BlockerOptions;
/**
* @hidden
*/
export declare class GestureController {
    private _app;
    private id;
    private requestedStart;
    private disabledGestures;
    private disabledScroll;
    private capturedID;
    constructor(_app: App);
    createGesture(opts: GestureOptions): GestureDelegate;
    createBlocker(opts?: BlockerOptions): BlockerDelegate;
    newID(): number;
    start(gestureName: string, id: number, priority: number): boolean;
    capture(gestureName: string, id: number, priority: number): boolean;
    release(id: number): void;
    disableGesture(gestureName: string, id: number): void;
    enableGesture(gestureName: string, id: number): void;
    disableScroll(id: number): void;
    enableScroll(id: number): void;
    canStart(gestureName: string): boolean;
    isCaptured(): boolean;
    isScrollDisabled(): boolean;
    isDisabled(gestureName: string): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GestureController, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<GestureController>;
}
/**
* @hidden
*/
export declare class GestureDelegate {
    private name;
    private id;
    private controller;
    private priority;
    private disableScroll;
    constructor(name: string, id: number, controller: GestureController, priority: number, disableScroll: boolean);
    canStart(): boolean;
    start(): boolean;
    capture(): boolean;
    release(): void;
    destroy(): void;
}
/**
* @hidden
*/
export declare class BlockerDelegate {
    private id;
    private controller;
    private disable;
    private disableScroll;
    blocked: boolean;
    constructor(id: number, controller: GestureController, disable: string[], disableScroll: boolean);
    block(): void;
    unblock(): void;
    destroy(): void;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VzdHVyZS1jb250cm9sbGVyLmQudHMiLCJzb3VyY2VzIjpbImdlc3R1cmUtY29udHJvbGxlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcCB9IGZyb20gJy4uL2NvbXBvbmVudHMvYXBwL2FwcCc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgR0VTVFVSRV9HT19CQUNLX1NXSVBFID0gXCJnb2JhY2stc3dpcGVcIjtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjb25zdCBHRVNUVVJFX01FTlVfU1dJUEUgPSBcIm1lbnUtc3dpcGVcIjtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjb25zdCBHRVNUVVJFX0lURU1fU1dJUEUgPSBcIml0ZW0tc3dpcGVcIjtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjb25zdCBHRVNUVVJFX1JFRlJFU0hFUiA9IFwicmVmcmVzaGVyXCI7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgR0VTVFVSRV9UT0dHTEUgPSBcInRvZ2dsZVwiO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEdFU1RVUkVfUFJJT1JJVFlfU0xJRElOR19JVEVNID0gLTEwO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEdFU1RVUkVfUFJJT1JJVFlfUkVGUkVTSEVSID0gMDtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjb25zdCBHRVNUVVJFX1BSSU9SSVRZX01FTlVfU1dJUEUgPSAxMDtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjb25zdCBHRVNUVVJFX1BSSU9SSVRZX0dPX0JBQ0tfU1dJUEUgPSAyMDtcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgZGVjbGFyZSBjb25zdCBHRVNUVVJFX1BSSU9SSVRZX1RPR0dMRSA9IDMwO1xuLyoqXG4qIEBoaWRkZW5cbiovXG5leHBvcnQgaW50ZXJmYWNlIEdlc3R1cmVPcHRpb25zIHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGlzYWJsZVNjcm9sbD86IGJvb2xlYW47XG4gICAgcHJpb3JpdHk/OiBudW1iZXI7XG59XG4vKipcbiogQGhpZGRlblxuKi9cbmV4cG9ydCBpbnRlcmZhY2UgQmxvY2tlck9wdGlvbnMge1xuICAgIGRpc2FibGVTY3JvbGw/OiBib29sZWFuO1xuICAgIGRpc2FibGU/OiBzdHJpbmdbXTtcbn1cbi8qKlxuKiBAaGlkZGVuXG4qL1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQkxPQ0tfQUxMOiBCbG9ja2VyT3B0aW9ucztcbi8qKlxuKiBAaGlkZGVuXG4qL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR2VzdHVyZUNvbnRyb2xsZXIge1xuICAgIHByaXZhdGUgX2FwcDtcbiAgICBwcml2YXRlIGlkO1xuICAgIHByaXZhdGUgcmVxdWVzdGVkU3RhcnQ7XG4gICAgcHJpdmF0ZSBkaXNhYmxlZEdlc3R1cmVzO1xuICAgIHByaXZhdGUgZGlzYWJsZWRTY3JvbGw7XG4gICAgcHJpdmF0ZSBjYXB0dXJlZElEO1xuICAgIGNvbnN0cnVjdG9yKF9hcHA6IEFwcCk7XG4gICAgY3JlYXRlR2VzdHVyZShvcHRzOiBHZXN0dXJlT3B0aW9ucyk6IEdlc3R1cmVEZWxlZ2F0ZTtcbiAgICBjcmVhdGVCbG9ja2VyKG9wdHM/OiBCbG9ja2VyT3B0aW9ucyk6IEJsb2NrZXJEZWxlZ2F0ZTtcbiAgICBuZXdJRCgpOiBudW1iZXI7XG4gICAgc3RhcnQoZ2VzdHVyZU5hbWU6IHN0cmluZywgaWQ6IG51bWJlciwgcHJpb3JpdHk6IG51bWJlcik6IGJvb2xlYW47XG4gICAgY2FwdHVyZShnZXN0dXJlTmFtZTogc3RyaW5nLCBpZDogbnVtYmVyLCBwcmlvcml0eTogbnVtYmVyKTogYm9vbGVhbjtcbiAgICByZWxlYXNlKGlkOiBudW1iZXIpOiB2b2lkO1xuICAgIGRpc2FibGVHZXN0dXJlKGdlc3R1cmVOYW1lOiBzdHJpbmcsIGlkOiBudW1iZXIpOiB2b2lkO1xuICAgIGVuYWJsZUdlc3R1cmUoZ2VzdHVyZU5hbWU6IHN0cmluZywgaWQ6IG51bWJlcik6IHZvaWQ7XG4gICAgZGlzYWJsZVNjcm9sbChpZDogbnVtYmVyKTogdm9pZDtcbiAgICBlbmFibGVTY3JvbGwoaWQ6IG51bWJlcik6IHZvaWQ7XG4gICAgY2FuU3RhcnQoZ2VzdHVyZU5hbWU6IHN0cmluZyk6IGJvb2xlYW47XG4gICAgaXNDYXB0dXJlZCgpOiBib29sZWFuO1xuICAgIGlzU2Nyb2xsRGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBpc0Rpc2FibGVkKGdlc3R1cmVOYW1lOiBzdHJpbmcpOiBib29sZWFuO1xufVxuLyoqXG4qIEBoaWRkZW5cbiovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBHZXN0dXJlRGVsZWdhdGUge1xuICAgIHByaXZhdGUgbmFtZTtcbiAgICBwcml2YXRlIGlkO1xuICAgIHByaXZhdGUgY29udHJvbGxlcjtcbiAgICBwcml2YXRlIHByaW9yaXR5O1xuICAgIHByaXZhdGUgZGlzYWJsZVNjcm9sbDtcbiAgICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsIGlkOiBudW1iZXIsIGNvbnRyb2xsZXI6IEdlc3R1cmVDb250cm9sbGVyLCBwcmlvcml0eTogbnVtYmVyLCBkaXNhYmxlU2Nyb2xsOiBib29sZWFuKTtcbiAgICBjYW5TdGFydCgpOiBib29sZWFuO1xuICAgIHN0YXJ0KCk6IGJvb2xlYW47XG4gICAgY2FwdHVyZSgpOiBib29sZWFuO1xuICAgIHJlbGVhc2UoKTogdm9pZDtcbiAgICBkZXN0cm95KCk6IHZvaWQ7XG59XG4vKipcbiogQGhpZGRlblxuKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJsb2NrZXJEZWxlZ2F0ZSB7XG4gICAgcHJpdmF0ZSBpZDtcbiAgICBwcml2YXRlIGNvbnRyb2xsZXI7XG4gICAgcHJpdmF0ZSBkaXNhYmxlO1xuICAgIHByaXZhdGUgZGlzYWJsZVNjcm9sbDtcbiAgICBibG9ja2VkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGlkOiBudW1iZXIsIGNvbnRyb2xsZXI6IEdlc3R1cmVDb250cm9sbGVyLCBkaXNhYmxlOiBzdHJpbmdbXSwgZGlzYWJsZVNjcm9sbDogYm9vbGVhbik7XG4gICAgYmxvY2soKTogdm9pZDtcbiAgICB1bmJsb2NrKCk6IHZvaWQ7XG4gICAgZGVzdHJveSgpOiB2b2lkO1xufVxuIl19