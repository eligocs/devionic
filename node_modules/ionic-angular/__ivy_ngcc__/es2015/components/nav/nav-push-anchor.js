import { Directive, Host, Optional } from '@angular/core';
import { DeepLinker } from '../../navigation/deep-linker';
import { NavPush } from './nav-push';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export class NavPushAnchor {
    constructor(host, linker) {
        this.host = host;
        this.linker = linker;
    }
    updateHref() {
        if (this.host && this.linker) {
            this._href = this.linker.createUrl(this.host._nav, this.host.navPush, this.host.navParams) || '#';
        }
        else {
            this._href = '#';
        }
    }
    ngAfterContentInit() {
        this.updateHref();
    }
}
NavPushAnchor.ɵfac = function NavPushAnchor_Factory(t) { return new (t || NavPushAnchor)(ɵngcc0.ɵɵdirectiveInject(NavPush, 1), ɵngcc0.ɵɵdirectiveInject(DeepLinker, 8)); };
NavPushAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NavPushAnchor, selectors: [["a", "navPush", ""]], hostVars: 1, hostBindings: function NavPushAnchor_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("href", ctx._href, ɵngcc0.ɵɵsanitizeUrl);
    } } });
/** @nocollapse */
NavPushAnchor.ctorParameters = () => [
    { type: NavPush, decorators: [{ type: Host },] },
    { type: DeepLinker, decorators: [{ type: Optional },] },
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NavPushAnchor, [{
        type: Directive,
        args: [{
                selector: 'a[navPush]',
                host: {
                    '[attr.href]': '_href'
                }
            }]
    }], function () { return [{ type: NavPush, decorators: [{
                type: Host
            }] }, { type: DeepLinker, decorators: [{
                type: Optional
            }] }]; }, null); })();

//# sourceMappingURL=nav-push-anchor.js.map