import { IonicNativePlugin } from '@ionic-native/core';
import * as ɵngcc0 from '@angular/core';
export interface PDFGeneratorOptions {
    /**
     * The document size, e.g., A2, A3, or A4.
     * Only supported on iOS.
     * The default is 'A4'.
     */
    documentSize?: string;
    /**
     * Option to change to landscape orientation.
     * Default is 'portrait'.
     */
    landscape?: 'landscape' | 'portrait';
    /**
     * The type to be returned, either 'share' or 'base64'.
     * If 'share is chosen, the PDF is shared with the system capabilities.
     * Default is 'base64'
     */
    type?: string;
    /**
     * The desired filename the resulting PDF should have.
     * Default is 'default.pdf'
     */
    fileName?: string;
    /**
     * Option to set the base URL for pathing.
     * Default is 'null'.
     */
    baseUrl?: string;
}
/**
 * @name PDFGenerator
 * @description
 * Simple plugin to generate (offline) pdf. The plugin transforms HTML to PDF and also provide the mechanism to share the pdf to other apps like Mail, etc.
 *
 * @usage
 * ```typescript
 * import { PDFGenerator } from '@ionic-native/pdf-generator';
 *
 * constructor(private pdfGenerator: PDFGenerator) { }
 *
 * ...
 *
 * this.pdfGenerator.fromURL(url, options).then(base64String => console.log(base64String));
 *
 * ```
 */
export declare class PDFGenerator extends IonicNativePlugin {
    /**
     * Creates a PDF using a URL, it download the document into an in memory Webkit object, and renders it into a PDF.
     * @param url {string} URL to create a PDF from
     * @param options {PDFGeneratorOptions} options for PDF generation
     * @returns {Promise<string>}
     */
    fromURL(url: string, options?: PDFGeneratorOptions): Promise<string>;
    /**
     * Creates a PDF using string with the HTML representation, it download the document into an in memory Webkit object, and renders it into a PDF.
     * @param data {string} HTML string representation to create a PDF from
     * @param options {PDFGeneratorOptions} options for PDF generation
     * @returns {Promise<string>}
     */
    fromData(data: string, options?: PDFGeneratorOptions): Promise<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PDFGenerator, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<PDFGenerator>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZC50cyIsInNvdXJjZXMiOlsiaW5kZXguZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJb25pY05hdGl2ZVBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5leHBvcnQgaW50ZXJmYWNlIFBERkdlbmVyYXRvck9wdGlvbnMge1xuICAgIC8qKlxuICAgICAqIFRoZSBkb2N1bWVudCBzaXplLCBlLmcuLCBBMiwgQTMsIG9yIEE0LlxuICAgICAqIE9ubHkgc3VwcG9ydGVkIG9uIGlPUy5cbiAgICAgKiBUaGUgZGVmYXVsdCBpcyAnQTQnLlxuICAgICAqL1xuICAgIGRvY3VtZW50U2l6ZT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBPcHRpb24gdG8gY2hhbmdlIHRvIGxhbmRzY2FwZSBvcmllbnRhdGlvbi5cbiAgICAgKiBEZWZhdWx0IGlzICdwb3J0cmFpdCcuXG4gICAgICovXG4gICAgbGFuZHNjYXBlPzogJ2xhbmRzY2FwZScgfCAncG9ydHJhaXQnO1xuICAgIC8qKlxuICAgICAqIFRoZSB0eXBlIHRvIGJlIHJldHVybmVkLCBlaXRoZXIgJ3NoYXJlJyBvciAnYmFzZTY0Jy5cbiAgICAgKiBJZiAnc2hhcmUgaXMgY2hvc2VuLCB0aGUgUERGIGlzIHNoYXJlZCB3aXRoIHRoZSBzeXN0ZW0gY2FwYWJpbGl0aWVzLlxuICAgICAqIERlZmF1bHQgaXMgJ2Jhc2U2NCdcbiAgICAgKi9cbiAgICB0eXBlPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBkZXNpcmVkIGZpbGVuYW1lIHRoZSByZXN1bHRpbmcgUERGIHNob3VsZCBoYXZlLlxuICAgICAqIERlZmF1bHQgaXMgJ2RlZmF1bHQucGRmJ1xuICAgICAqL1xuICAgIGZpbGVOYW1lPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIE9wdGlvbiB0byBzZXQgdGhlIGJhc2UgVVJMIGZvciBwYXRoaW5nLlxuICAgICAqIERlZmF1bHQgaXMgJ251bGwnLlxuICAgICAqL1xuICAgIGJhc2VVcmw/OiBzdHJpbmc7XG59XG4vKipcbiAqIEBuYW1lIFBERkdlbmVyYXRvclxuICogQGRlc2NyaXB0aW9uXG4gKiBTaW1wbGUgcGx1Z2luIHRvIGdlbmVyYXRlIChvZmZsaW5lKSBwZGYuIFRoZSBwbHVnaW4gdHJhbnNmb3JtcyBIVE1MIHRvIFBERiBhbmQgYWxzbyBwcm92aWRlIHRoZSBtZWNoYW5pc20gdG8gc2hhcmUgdGhlIHBkZiB0byBvdGhlciBhcHBzIGxpa2UgTWFpbCwgZXRjLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgUERGR2VuZXJhdG9yIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9wZGYtZ2VuZXJhdG9yJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHBkZkdlbmVyYXRvcjogUERGR2VuZXJhdG9yKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnBkZkdlbmVyYXRvci5mcm9tVVJMKHVybCwgb3B0aW9ucykudGhlbihiYXNlNjRTdHJpbmcgPT4gY29uc29sZS5sb2coYmFzZTY0U3RyaW5nKSk7XG4gKlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBERkdlbmVyYXRvciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgUERGIHVzaW5nIGEgVVJMLCBpdCBkb3dubG9hZCB0aGUgZG9jdW1lbnQgaW50byBhbiBpbiBtZW1vcnkgV2Via2l0IG9iamVjdCwgYW5kIHJlbmRlcnMgaXQgaW50byBhIFBERi5cbiAgICAgKiBAcGFyYW0gdXJsIHtzdHJpbmd9IFVSTCB0byBjcmVhdGUgYSBQREYgZnJvbVxuICAgICAqIEBwYXJhbSBvcHRpb25zIHtQREZHZW5lcmF0b3JPcHRpb25zfSBvcHRpb25zIGZvciBQREYgZ2VuZXJhdGlvblxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59XG4gICAgICovXG4gICAgZnJvbVVSTCh1cmw6IHN0cmluZywgb3B0aW9ucz86IFBERkdlbmVyYXRvck9wdGlvbnMpOiBQcm9taXNlPHN0cmluZz47XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIFBERiB1c2luZyBzdHJpbmcgd2l0aCB0aGUgSFRNTCByZXByZXNlbnRhdGlvbiwgaXQgZG93bmxvYWQgdGhlIGRvY3VtZW50IGludG8gYW4gaW4gbWVtb3J5IFdlYmtpdCBvYmplY3QsIGFuZCByZW5kZXJzIGl0IGludG8gYSBQREYuXG4gICAgICogQHBhcmFtIGRhdGEge3N0cmluZ30gSFRNTCBzdHJpbmcgcmVwcmVzZW50YXRpb24gdG8gY3JlYXRlIGEgUERGIGZyb21cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyB7UERGR2VuZXJhdG9yT3B0aW9uc30gb3B0aW9ucyBmb3IgUERGIGdlbmVyYXRpb25cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fVxuICAgICAqL1xuICAgIGZyb21EYXRhKGRhdGE6IHN0cmluZywgb3B0aW9ucz86IFBERkdlbmVyYXRvck9wdGlvbnMpOiBQcm9taXNlPHN0cmluZz47XG59XG4iXX0=