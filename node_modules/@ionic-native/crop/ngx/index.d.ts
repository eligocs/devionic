import { IonicNativePlugin } from '@ionic-native/core';
import * as ɵngcc0 from '@angular/core';
export interface CropOptions {
    quality?: number;
    targetHeight?: number;
    targetWidth?: number;
}
/**
 * @name Crop
 * @description Crops images
 * @usage
 * ```typescript
 * import { Crop } from '@ionic-native/crop/ngx';
 *
 * constructor(private crop: Crop) { }
 *
 * ...
 *
 * this.crop.crop('path/to/image.jpg', {quality: 75})
 *   .then(
 *     newImage => console.log('new image path is: ' + newImage),
 *     error => console.error('Error cropping image', error)
 *   );
 * ```
 * @interfaces
 * CropOptions
 */
export declare class Crop extends IonicNativePlugin {
    /**
     * Crops an image
     * @param {string} pathToImage
     * @param {CropOptions} [options]
     * @returns {Promise<string>} Returns a promise that resolves with the new image path, or rejects if failed to crop.
     */
    crop(pathToImage: string, options?: CropOptions): Promise<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Crop, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<Crop>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZC50cyIsInNvdXJjZXMiOlsiaW5kZXguZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW9uaWNOYXRpdmVQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuZXhwb3J0IGludGVyZmFjZSBDcm9wT3B0aW9ucyB7XG4gICAgcXVhbGl0eT86IG51bWJlcjtcbiAgICB0YXJnZXRIZWlnaHQ/OiBudW1iZXI7XG4gICAgdGFyZ2V0V2lkdGg/OiBudW1iZXI7XG59XG4vKipcbiAqIEBuYW1lIENyb3BcbiAqIEBkZXNjcmlwdGlvbiBDcm9wcyBpbWFnZXNcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ3JvcCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY3JvcC9uZ3gnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgY3JvcDogQ3JvcCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5jcm9wLmNyb3AoJ3BhdGgvdG8vaW1hZ2UuanBnJywge3F1YWxpdHk6IDc1fSlcbiAqICAgLnRoZW4oXG4gKiAgICAgbmV3SW1hZ2UgPT4gY29uc29sZS5sb2coJ25ldyBpbWFnZSBwYXRoIGlzOiAnICsgbmV3SW1hZ2UpLFxuICogICAgIGVycm9yID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyb3BwaW5nIGltYWdlJywgZXJyb3IpXG4gKiAgICk7XG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBDcm9wT3B0aW9uc1xuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDcm9wIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAgIC8qKlxuICAgICAqIENyb3BzIGFuIGltYWdlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGhUb0ltYWdlXG4gICAgICogQHBhcmFtIHtDcm9wT3B0aW9uc30gW29wdGlvbnNdXG4gICAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBuZXcgaW1hZ2UgcGF0aCwgb3IgcmVqZWN0cyBpZiBmYWlsZWQgdG8gY3JvcC5cbiAgICAgKi9cbiAgICBjcm9wKHBhdGhUb0ltYWdlOiBzdHJpbmcsIG9wdGlvbnM/OiBDcm9wT3B0aW9ucyk6IFByb21pc2U8c3RyaW5nPjtcbn1cbiJdfQ==